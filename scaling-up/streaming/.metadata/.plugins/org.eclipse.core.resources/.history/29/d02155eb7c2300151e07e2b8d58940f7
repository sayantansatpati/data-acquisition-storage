package edu.berkeley.mids.scaling.streaming.twitter

import org.apache.spark.streaming.{Seconds, StreamingContext}
import org.apache.spark.SparkContext._
import org.apache.spark.streaming.twitter._
import org.apache.spark.SparkConf
import org.apache.spark.streaming.StreamingContext._
import com.typesafe.config.ConfigFactory

object Twitter {
  def main(args: Array[String]) {
    Config conf = ConfigFactory.load();
    System.setProperty("twitter4j.oauth.consumerKey", "XXX")
    System.setProperty("twitter4j.oauth.consumerSecret", "XXX")
    System.setProperty("twitter4j.oauth.accessToken", "XXX")
    System.setProperty("twitter4j.oauth.accessTokenSecret", "XXX")

    val sparkConf = new SparkConf().setAppName("Twitter")
    val ssc = new StreamingContext(sparkConf, Seconds(5))
    val stream = TwitterUtils.createStream(ssc, None)

    val tweets = stream.map(tweet => tweet.getText())
    tweets.print()

    ssc.start()
    ssc.awaitTermination()
  }
}